#+title: Simple pendulum
#+setupfile: ~/Dropbox/Templates/physics.org

This is an simple pendulum system example. The focus here is more
in learning a little o =Fortran= and =org-mode= great features
for writting scientific documents (like export for =.pdf=).

* System 
  \[ \omega_{i+1} = w_i - \frac{g}{l}\cdot  \theta _i \cdot  \Delta t \]
  \[ \theta _{i+1} = \theta _i + \omega_i \cdot  \Delta t  \]
* Fortran Code
#+name: s_pendulum
#+begin_src fortran 
    implicit none
    integer, parameter :: n = 500
    real, parameter :: g = 9.81
    real, parameter :: l = 1.0
    real, dimension(n) :: w, t
    real, dimension(n) :: theta
    real, parameter :: dt = 0.02
    integer :: i
    theta(1) = 0.02
    w(1) = 0
    t(1) = 0
    do i = 1, n-1
       w(i+1) = w(i) - (g/l) * theta(i) * dt
       theta(i+1) = theta(i) + w(i+1) * dt
       t(i+1) = t(i) + dt
    end do  

    do i = 1, n
       print *, t(i) ,  theta(i)
    end do
#+end_src
* Plotting with Gnuplot 
#+begin_src gnuplot :var data=s_pendulum :file output.png :exports results
  set xrange[*:*] noreverse writeback
  set yrange[*:*] noreverse writeback

  set grid
  set style line 1 lt 1 lc "black" lw 2
  set key right top

  set xlabel "Time"
  set ylabel "Angle"

  plot data using 1:2 with line ls 1
#+end_src
#+RESULTS:
[[file:output.png]]
* C++ code  :noexport:
  
#+begin_src C++ :includes <stdio.h> :cache yes 
  const int n = 100;
  const float g = 9.81;
  const float l = 1.0;
  const double dt = 0.03;

  double w[n];
  double t[n];

  w[0] = 0.0;
  t[0] = 0.0;

  double theta[n];
  theta[0] = 0.2;
  int i = 0;
  while ( i < n ) {
      w[i+1] = w[i] - (g/l) * theta[i] * dt;
      theta[i+1] = theta[i] + w[i+1] * dt;
      t[i+1] = t[i] + dt;
      i++;
  }

  for(int i = 0; i < n; i++)
      printf("%.6f %.6f \n", t[i],theta[i]);
#+end_src


